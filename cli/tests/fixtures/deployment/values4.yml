rbac:
  enabled: true

environment: staging

ingress:
  enabled: true

gateway:
  replicas: 1
  concurrency: 2
  perCore: true
  imageTag: latest
  imagePullPolicy: Always
  service:
    type: ClusterIP

user:
  password: test

artifactsStore:
  name: test
  kind: volume_claim
  schema: {"volumeClaim": "test", "mountPath": "/tmp"}

connections:
  - name: gcs
    kind: gcs
    tags: [foo, bar]
    schema: {"bucket": "gs://test-logs"}
    secret:
      name: gcs-secret
  - name: azure
    kind: wasb
    schema: {"bucket": "wasbs://logs@test.blob.core.windows.net/"}
    secret:
      name: az-secret

nodeSelector:
  polyaxon: core

scheduler:
  concurrency: 10
  replicas: 1
  imageTag: latest
  imagePullPolicy: Always

worker:
  replicas: 1
  imageTag: latest
  imagePullPolicy: Always

beat:
  imageTag: latest
  imagePullPolicy: Always

apiHooks:
  imageTag: latest
  imagePullPolicy: Always
  loadFixtures: true
  tables: false
  syncdb: false
  adminUser: false

timezone: 'Europe/Berlin'

hostName: 19.3.50.12
allowedHosts:
  - 127.0.0.1
  - 123.123.12.3
logLevel: INFO

ldap:
  serverUri: https://foo.bar
  globalOptions: {"foo": "bar"}
  connectionOptions: {"foo": "bar"}
  bindDN: foo
  bindPassword: foo
  userSearchBaseDN: foo
  userSearchFilterStr: foo
  userDNTemplate: foo
  startTLS: false
  userAttrMap: {}
  groupSearchBaseDN:
  groupSearchGroupType:
  requireGroup:
  denyGroup:

ssl:
  enabled: true
  secretName: 'polyaxon-cert'
  path: /etc/tls

dns:
  backend: "coredns"
  customCluster: "custom.cluster.name"
  prefix:

securityContext:
  enabled: true
  runAsUser: 2222
  runAsGroup: 2222
  fsGroup: 2222
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  fsGroupChangePolicy: "Always"

passwordLength: 4
passwordAuth: true

auth:
  enabled: false
  external:
  useResolver: true

ui:
  enabled: true
  offline: true
  staticUrl: https://ffo.com
  adminEnabled: true
  singleUrl: true
  defaultStreamsUrl: https://agent.foo.com
